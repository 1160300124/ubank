<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致

 -->
<mapper namespace="com.ulaiber.web.dao.BanksRootDao">

    <!--银行用户登录-->
    <select id="bankUserLogin" parameterType="Map" resultType="com.ulaiber.web.model.BankUsers">
        select a.*,b.type as roleType from tbl_bank_users a
          left join tbl_bank_roles b on a.roleid = b.id
          WHERE a.disabled = 0 and a.mobile = #{mobile}
    </select>

    <!--修改银行用户密码-->
    <update id="modifyPwd" parameterType="Map">
        UPDATE tbl_bank_users SET password = #{password} where mobile = #{mobile}
    </update>

    <!--根据角色名获取银行管理页-->
    <select id="getBankMenuByUser" parameterType="String" resultType="com.ulaiber.web.model.Menu">
        SELECT a.id , a.NAME , a.url , a.CODE , a.father , a.icon , a.sorting
            FROM tbl_menu a WHERE  a.CODE IN( SELECT b.menuNumber FROM tbl_bank_users c
            LEFT JOIN tbl_roleMenu b ON c.roleid = b.role_id
            WHERE c.disabled = 0 and a.type = 1 AND c.NAME = #{userName})
    </select>

    <!--根据银行名称查询银行信息-->
    <select id="queryBankByName" parameterType="String" resultType="com.ulaiber.web.model.Headquarters">
        SELECT * FROM tbl_bank_headquarters where bankName = #{bankName}
    </select>

    <!--新增总行-->
    <insert id="insertHeadquarters" parameterType="com.ulaiber.web.model.Headquarters">
        INSERT INTO tbl_bank_headquarters(bankName,remark)
            VALUES (#{bankName},#{remark})
    </insert>

    <!--获取总行数量-->
    <select id="getHeadquartersCount" resultType="int">
        select count(id) as count from tbl_bank_headquarters
    </select>

    <!--查询总行信息-->
    <select id="queryHeadquarters" parameterType="Map" resultType="com.ulaiber.web.model.Headquarters">
        SELECT * FROM tbl_bank_headquarters where 1=1
        <if test="search != null and search != ''">
            and bankName like concat('%',#{search},'%')
        </if>
        limit #{pageNum},#{pageSize}
    </select>

    <!--根据银行编号修改银行信息-->
    <update id="modifyHeadquarters" parameterType="com.ulaiber.web.model.Headquarters">
        UPDATE tbl_bank_headquarters SET bankName = #{bankName} ,remark = #{remark} WHERE id = #{id}
    </update>

    <!--根据总行编号查询是否存在分部-->
    <select id="queryBranchByBankNo" parameterType="int" resultType="com.ulaiber.web.model.Branch">
        SELECT * FROM tbl_bank_branch where headquartersNo IN
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </select>

    <!--根据银行编号删除银行-->
    <delete id="removeHeadquarters" parameterType="int">
        DELETE FROM tbl_bank_headquarters WHERE id IN
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </delete>

    <!--获取所有总部-->
    <select id="getAllHeadquarters" parameterType="int" resultType="com.ulaiber.web.model.Headquarters">
        SELECT * FROM  tbl_bank_headquarters where 1=1
        <if test=" _parameter != '' and _parameter != null">
            and id = #{bankNo}
        </if>
    </select>

    <!--获取分行数量-->
    <select id="getbranchCount" parameterType="Map" resultType="int">
        SELECT count(id) AS count FROM tbl_bank_branch
        <if test="bankNo != null and bankNo != ''">
            <if test="type == '0'">
                where headquartersNo = #{bankNo}
            </if>
        </if>
    </select>

    <!--分部查询-->
    <select id="queryBranchs" parameterType="Map" resultType="com.ulaiber.web.model.Branch">
        select a.id,a.name,a.headquartersNo,a.remark,b.bankName as headquarters from tbl_bank_branch a
          left join tbl_bank_headquarters b on a.headquartersNo = b.id where 1=1
        <if test="bankNo != null and bankNo != ''">
            <if test="type == '0'">
                and a.headquartersNo = #{bankNo}
            </if>
        </if>
        <if test="search != null and search != ''">
            and a.name like concat('%',#{search},'%')
        </if>
        limit #{pageNum},#{pageSize}
    </select>

    <!--根据名称查询分行是否已存在-->
    <select id="queryBranchByName" parameterType="String" resultType="com.ulaiber.web.model.Branch">
        SELECT * FROM tbl_bank_branch WHERE name = #{branchName}
    </select>

    <!--新增分行-->
    <insert id="insertBranchs" parameterType="com.ulaiber.web.model.Branch" >
        INSERT INTO tbl_bank_branch(name,headquartersNo,remark)
            VALUES (#{name},#{headquartersNo},#{remark})
    </insert>

    <!-- 获取各个分行业务员的总数-->
    <select id="getBranchSalemenCount" parameterType="int" resultType="Map">
        SELECT bankNo,count(id) as count from tbl_bank_users where disabled = 0 and bankNo in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
             #{ids}
        </foreach>
        GROUP BY bankNo
    </select>

    <!-- 根据分行编号修改分行信息-->
    <update id="modifyBranchs" parameterType="com.ulaiber.web.model.Branch" >
        UPDATE tbl_bank_branch set name = #{name} ,headquartersNo = #{headquartersNo},remark = #{remark}
              WHERE id = #{id}
    </update>

    <!--根据分行编号查询是否存在支行-->
    <select id="queryBranchChildrenByBranchId" parameterType="Map" resultType="com.ulaiber.web.model.BranchsChildren">
        SELECT id,name FROM  tbl_branch_children where bankNo in
        <foreach collection="number" item="number" open="(" separator="," close=")">
              #{number}
        </foreach>

    </select>

    <!--删除分行-->
    <delete id="removeBranchs" parameterType="int" >
        DELETE FROM tbl_bank_branch where id in
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </delete>

    <!--查询分支数量-->
    <select id="getBranchChilCount" parameterType="Map" resultType="int">
        SELECT count(a.id) as count from tbl_branch_children a
        left join tbl_bank_branch b on a.bankNo = b.id
        left join tbl_bank_headquarters c on a.bankNo = c.id where 1=1
        <if test="bankNo != null and bankNo != ''">
            <if test="type == 0">
                and c.id = #{bankNo}
            </if>
            <if test="type == 1">
                and b.id = #{bankNo}
            </if>
        </if>


    </select>

    <!--查询支行-->
    <select id="queryBranchsChild" parameterType="Map" resultType="com.ulaiber.web.model.BranchsChildren">
        SELECT a.id,a.name,a.bankNo,a.remark,a.bankName,a.type from tbl_branch_children a
        left join tbl_bank_branch b on a.bankNo = b.id
        left join tbl_bank_headquarters c on a.bankNo = c.id where 1=1
        <if test=" bankNo != '' and bankNo != null ">
            <if test="type == 0">
                and c.id = #{bankNo}
            </if>
            <if test="type == 1">
                and b.id = #{bankNo}
            </if>
        </if>
        <if test="search != null and search != ''">
            and a.name like concat('%',#{search},'%')
        </if>
        limit #{pageNum},#{pageSize}
    </select>

    <!--获取所有分部-->
    <select id="getAllBranchs" parameterType="int" resultType="com.ulaiber.web.model.Branch">
        SELECT * FROM tbl_bank_branch WHERE 1=1
        <if test=" _parameter != '' and _parameter != null">
            and headquartersNo = #{bankNo}
        </if>
    </select>

    <!--根据支行名称查询支行是否已存在-->
    <select id="queryBranchChildByName" parameterType="String" resultType="com.ulaiber.web.model.BranchsChildren">
        SELECT id FROM tbl_branch_children where name = #{childName}
    </select>

    <!--新增支行-->
    <insert id="insertBranchsChild" parameterType="com.ulaiber.web.model.BranchsChildren">
        INSERT INTO tbl_branch_children(name,bankNo,bankName,remark,type)
            VALUES (#{name},#{bankNo},#{bankName},#{remark},#{type})
    </insert>

    <!--修改支行-->
    <update id="modifyBranchsChild" parameterType="com.ulaiber.web.model.BranchsChildren" >
        UPDATE tbl_branch_children SET name = #{name},bankNo = #{bankNo} , bankName = #{bankName},remark = #{remark},type = #{type}
            where id = #{id}
    </update>

    <!--根据支行编号查询是否存在业务员-->
    <select id="querySalemanByBranchChildId" parameterType="int" resultType="com.ulaiber.web.model.BankUsers">
        SELECT id FROM tbl_bank_users where disabled = 0 and bankNo in
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </select>

    <!--删除支行-->
    <delete id="removeBranchChild" parameterType="int">
        DELETE FROM  tbl_branch_children where id in
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </delete>

    <!--获取银行用户数量-->
    <select id="getBankUsersCount" parameterType="Map" resultType="int">
        select count(a.id) as count from tbl_bank_users a
            left join tbl_bank_branch c on a.bankNo = c.id
            left join tbl_bank_headquarters d on a.bankNo = d.id
            left join tbl_branch_children e on a.bankNo = e.id where a.disabled = 0
        <if test=" bankNo != '' and bankNo != null ">
            <if test="type == 0">
                and d.id = #{bankNo}
            </if>
            <if test="type == 1">
                and c.id = #{bankNo}
            </if>
            <if test="type == 2">
                and e.id = #{bankNo}
            </if>
        </if>
    </select>

    <!--获取银行用户-->
    <select id="queryBankUsers" parameterType="Map" resultType="com.ulaiber.web.model.BankUsers">
        select a.*,b.role_name as roleName from tbl_bank_users a
            left join tbl_bank_roles b on a.roleid = b.id
            left join tbl_bank_branch c on a.bankNo = c.id
            left join tbl_bank_headquarters d on a.bankNo = d.id
            left join tbl_branch_children e on a.bankNo = e.id where a.disabled = 0 and a.type is not null
        <if test=" bankNo != '' and bankNo != null ">
            <if test="type == 0">
                and d.id = #{bankNo}
            </if>
            <if test="type == 1">
                and c.id = #{bankNo}
            </if>
            <if test="type == 2">
                and e.id = #{bankNo}
            </if>
        </if>

        <if test="search != null and search != ''">
            and a.name like concat('%',#{name},'%')
        </if>
        <if test="search != null and search != ''">
            and a.mobile = #{mobile}
        </if>

        limit #{pageNum},#{pageSize}
    </select>

    <!--根据银行编号获取总行-->
    <select id="getHeadquarters" parameterType="int" resultType="com.ulaiber.web.model.Headquarters">
        SELECT * from tbl_bank_headquarters where 1=1
        <if test="_parameter != '' and _parameter != null">
             and id = #{bankNo}
        </if>
    </select>

    <!--根据总行编号获取支行-->
    <select id="getBranchsChild" parameterType="int" resultType="com.ulaiber.web.model.BranchsChildren" >
        SELECT * from tbl_branch_children where 1=1
        <if test="_parameter != '' and _parameter != null">
             and bankNo = #{bankNo}
        </if>
    </select>

    <!--根据分行编号获取分行-->
    <select id="getBranchs" parameterType="int" resultType="com.ulaiber.web.model.Branch">
        SELECT * FROM tbl_bank_branch WHERE 1=1
        <if test=" _parameter != '' and _parameter != null">
            and id = #{bankNo}
        </if>
    </select>

    <!--根据银行编号获取支行-->
    <select id="getBranchChildByID" parameterType="int" resultType="com.ulaiber.web.model.BranchsChildren">
        SELECT * from tbl_branch_children where 1=1
        <if test="_parameter != '' and _parameter != null">
            and id = #{bankNo}
        </if>
    </select>

    <!--根据银行类型获取角色-->
    <select id="getRoleByType" parameterType="Map" resultType="com.ulaiber.web.model.BankRoles">
        SELECT id,role_name as roleName,type FROM tbl_bank_roles WHERE  1=1
        <if test="type == 0">
            and type = 0 or type = 3
        </if>
        <if test="type == 1">
            and type = 1 or type = 3
        </if>
        <if test="type == 2">
            and type = 2 or type = 3
        </if>
    </select>

    <!--根据名称查询当前用户是否已存在-->
    <select id="getUserByName" parameterType="String" resultType="com.ulaiber.web.model.BankUsers">
        SELECT id FROM tbl_bank_users where disabled = 0 and name = #{name}
    </select>

    <!--新增银行用户-->
    <insert id="insertBankUser" parameterType="com.ulaiber.web.model.BankUsers">
        INSERT INTO tbl_bank_users(name,number,bankNo,bankName,officePhone,mobile,password,roleid,remark,disabled,type)
          VALUES (#{name},#{number},#{bankNo},#{bankName},#{officePhone},#{mobile},#{password},#{roleid},#{remark},'0',#{type})
    </insert>

    <!--修改银行用户-->
    <update id="modifyBankUser" parameterType="com.ulaiber.web.model.BankUsers">
        UPDATE tbl_bank_users SET name = #{name},number = #{number}, bankNo = #{bankNo},bankName = #{bankName},officePhone = #{officePhone},
             mobile = #{mobile},password = #{password},roleid = #{roleid},remark = #{remark} where id = #{id}
    </update>

    <!--删除银行员工-->
    <delete id="removeBankUser" parameterType="int">
        UPDATE tbl_bank_users set disabled = 1 where id in
        <foreach collection="array" item="number" open="(" separator="," close=")">
            #{number}
        </foreach>
    </delete>

    <!--根据移动电话查询当前电话是否已存在-->
    <select id="getUserByMobile" parameterType="String" resultType="com.ulaiber.web.model.BankUsers">
        SELECT id FROM tbl_bank_users where disabled = 0 and mobile = #{mobile}
    </select>

    <!--新增集团-->
    <insert id="insertGroup" parameterType="int" useGeneratedKeys="true" keyProperty="groupNumber">
        insert into tbl_group(name,registeredCapital,legalPerson,contacts,contactsTelephone,details,remark)
            VALUES (#{name},#{registeredCapital},#{legalPerson},#{contacts},#{contactsTelephone},#{details},#{remark})
    </insert>

    <!--新增公司基本信息-->
    <insert id="insertCompany" parameterType="com.ulaiber.web.model.Company" useGeneratedKeys="true" keyProperty="companyNumber">
        INSERT into tbl_company(name,legalPerson,account,group_num,details,code)
              VALUES (#{name},#{legalPerson},#{account},#{group_num},#{details},#{code})
    </insert>

    <!--新增角色信息-->
    <insert id="insertRole" parameterType="com.ulaiber.web.model.Roles" useGeneratedKeys="true" keyProperty="role_id">
        INSERT INTO tbl_roles(role_name,companyNumber,companyName,type)
        VALUES (#{role_name},#{companyNumber},#{companyName},1)
    </insert>

    <!--新增员工信息-->
    <insert id="insertEmployee" parameterType="com.ulaiber.web.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tbl_users(login_password,mobile,cardType,user_name,cardNo,bankNo,bankCardNo,role_id ,createTime,entryDate,leaveDate,disabled)
        VALUES (#{login_password},#{mobile},"1",#{userName},#{cardNo},#{bankNo},#{bankCardNo},#{role_id},#{createTime},#{entryDate},#{leaveDate},'0')
    </insert>

    <!--创建业务信息-->
    <insert id="insertBusiness" parameterType="com.ulaiber.web.model.Business">
        INSERT INTO tbl_business (number,groupNo,companyNo,userid,remark,bankNo,type)
        VALUES (#{number},#{groupNo},#{companyNo},#{userid},#{remark},#{bankNo},#{type})
    </insert>

    <!--新增用户权限层级信息-->
    <insert id="insertPermission" parameterType="com.ulaiber.web.model.User">
        INSERT INTO tbl_roots(userid,groupNumber,companyNumber,dept_number,sysflag,disabled)
        VALUES (#{id},#{groupNumber},#{companyNumber},#{dept_number},'1','0')
    </insert>

    <!--设置角色权限-->
    <insert id="insertRoleMenu" parameterType="java.util.List">
        INSERT INTO tbl_roleMenu(role_id,menuNumber) VALUES
        <foreach collection="list" item="items" index= "index" separator =",">
            (#{items.roleId},#{items.menuId})
        </foreach>
    </insert>

    <!-- 获取业务数量-->
    <select id="getBusinessCount" parameterType="Map" resultType="int">
        SELECT count(a.id) as count FROM tbl_business a where 1=1
          <if test=" bankNo != '' and bankNo != null ">
              and bankNo = #{bankNo}
              <if test="roleType == 3 ">
                  and number = #{number}
              </if>
          </if>
    </select>
    
    <!--业务查询-->
    <select id="queryBusiness" parameterType="Map" resultType="com.ulaiber.web.model.Business">
        SELECT a.*,b.name,b.bankName,f.name as groupName,g.user_name as userName,g.mobile FROM tbl_business a
            left join tbl_bank_users b on a.number = b.number
            left join tbl_bank_headquarters c on a.bankno = c.id
            left join tbl_bank_branch d on a.bankNo = d.id
            left join tbl_branch_children e on a.bankNo = e.id
            left join tbl_group f on a.groupNo = f.groupNumber
            left join tbl_users g on a.userid = g.user_id  where 1=1
        <if test=" bankNo != '' and bankNo != null ">
            <if test="heaquarters != '' and heaquarters != null">
               and c.bankName LIKE concat('%',#{heaquarters},'%')
            </if>
            <if test="branch != '' and branch != null">
                and d.name LIKE concat('%',#{branch},'%')
            </if>
            <if test="child != '' and child != null">
                and e.name LIKE concat('%',#{child},'%')
            </if>
            <if test="groupName != '' and groupName != null">
                and f.name LIKE concat('%',#{groupName},'%')
            </if>
            <if test="name != '' and name != null">
                and b.name LIKE concat('%',#{name},'%')
            </if>
            <if test="roleType == 3">
                and b.number = #{number}
            </if>
        </if>
        limit #{pageNum},#{pageSize}

    </select>
</mapper>