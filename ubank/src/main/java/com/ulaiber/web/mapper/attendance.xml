<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.ulaiber.web.dao.AttendanceDao">

    <resultMap id="AttendanceMap" type="Attendance" >
    	<id column="rid" property="rid" jdbcType="BIGINT" />
    	<result column="user_id" property="userId" jdbcType="BIGINT" />
    	<result column="user_name" property="userName" jdbcType="VARCHAR" />
    	<result column="clock_date" property="clockDate" jdbcType="VARCHAR" />
    	<result column="clock_on_datetime" property="clockOnDateTime" jdbcType="VARCHAR" />
    	<result column="clock_on_status" property="clockOnStatus" jdbcType="VARCHAR" />
    	<result column="clock_on_location" property="clockOnLocation" jdbcType="VARCHAR" />
    	<result column="clock_on_device" property="clockOnDevice" jdbcType="VARCHAR" />
    	<result column="clock_on_remark" property="clockOnRemark" jdbcType="VARCHAR" />
    	<result column="clock_off_datetime" property="clockOffDateTime" jdbcType="VARCHAR" />
    	<result column="clock_off_status" property="clockOffStatus" jdbcType="VARCHAR" />
    	<result column="clock_off_location" property="clockOffLocation" jdbcType="VARCHAR" />
    	<result column="clock_off_device" property="clockOffDevice" jdbcType="VARCHAR" />
    	<result column="clock_off_remark" property="clockOffRemark" jdbcType="VARCHAR" />
    	<result column="patchClock_type" property="patchClockType" jdbcType="VARCHAR" />
    	<result column="patchClock_status" property="patchClockStatus" jdbcType="VARCHAR" />
    	<result column="revoke_type" property="revokeType" jdbcType="VARCHAR" />
    	<association column="dept_num" property="dept" javaType="com.ulaiber.web.model.Departments" resultMap="DepartmentMap"/>
    	<association column="company_num" property="company" javaType="com.ulaiber.web.model.Company" resultMap="CompanyMap"/>
   </resultMap>
   
   <resultMap id="DepartmentMap" type="com.ulaiber.web.model.Departments" >
    	<id column="dept_number" property="dept_number" jdbcType="INTEGER" />
    	<result column="deptName" property="deptName" jdbcType="VARCHAR" />
    	<result column="count" property="count" />
    	<result column="remark" property="remark" jdbcType="VARCHAR" />
    	<result column="company_num" property="company_num" />
   </resultMap>
   
   <resultMap id="CompanyMap" type="com.ulaiber.web.model.Company" >
    	<id column="companyNumber" property="companyNumber" jdbcType="INTEGER" />
    	<result column="name" property="name" jdbcType="VARCHAR" />
    	<result column="account" property="account" jdbcType="VARCHAR" />
    	<result column="legalPerson" property="legalPerson" jdbcType="VARCHAR" />
    	<result column="details" property="details" jdbcType="VARCHAR" />
    	<result column="group_num" property="group_num" />
   </resultMap>
  
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<insert id="save" parameterType="Attendance" >
		insert into tbl_attendance_records(user_id,user_name,dept_num,company_num,clock_date,clock_on_datetime,clock_on_status,clock_on_location,clock_on_device,
		clock_on_remark,clock_off_datetime,clock_off_status,clock_off_location,clock_off_device,clock_off_remark,patchClock_type,patchClock_status,revoke_type) values
		(#{userId},#{userName},#{dept.dept_number},#{company.companyNumber},#{clockDate},#{clockOnDateTime},#{clockOnStatus},#{clockOnLocation},#{clockOnDevice},
		#{clockOnRemark},#{clockOffDateTime},#{clockOffStatus},#{clockOffLocation},#{clockOffDevice},#{clockOffRemark},#{patchClockType},#{patchClockStatus},#{revokeType}) 
	</insert>
	
	<sql id="byCond">
		where r.company_num = #{company_num} and r.clock_date &gt;= #{start_date} and r.clock_date &lt;= #{end_date}
		<if test="dept_num != null and dept_num != 0">
			and r.dept_num = #{dept_num}
		</if>
		<if test="clock_on_status == 3 and clock_off_status == 3">
			and (clock_on_status = #{clock_on_status} or r.clock_off_status = #{clock_off_status})
		</if>
		<if test="clock_on_status == '' and clock_off_status == ''">
			and (clock_on_status is null or clock_off_status is null)
		</if>
		<if test="clock_on_status != null and clock_on_status != '' and clock_on_status != 3">
			and r.clock_on_status = #{clock_on_status}
		</if>
		<if test="clock_off_status != null and clock_off_status != '' and clock_off_status != 3">
			and r.clock_off_status = #{clock_off_status}
		</if>
		<if test="user_name != null and user_name != ''">
			and r.user_name like concat('%',#{user_name},'%')
		</if>
	</sql>
	
	<select id="getRecordsByCond" parameterType="Map" resultMap="AttendanceMap">
		select r.*,d.dept_number,d.name deptName,c.companyNumber,c.name from tbl_attendance_records r left join tbl_departments d on r.dept_num=d.dept_number 
			left join tbl_company c on d.company_num=c.companyNumber
			<include refid="byCond" />
		order by rid 
		<if test="limit != null and limit != ''">
			limit #{offset},#{limit}
		</if>
	</select>

	<select id="getCountBycond" parameterType="Map" resultType="Integer">
		select count(1) from tbl_attendance_records r left join tbl_departments d on r.dept_num=d.dept_number left join tbl_company c on d.company_num=c.companyNumber
		<include refid="byCond" />
	</select>
	
	<select id="getRecordsByDateAndUserId" parameterType="Map" resultMap="AttendanceMap">
		select user_id,user_name,clock_date,clock_on_datetime,clock_on_status,clock_on_location,clock_on_device,clock_on_remark,clock_off_datetime,clock_off_status,
		clock_off_location,clock_off_device,clock_off_remark,patchClock_type,patchClock_status,revoke_type from tbl_attendance_records 
		where user_id=#{userId} and clock_date&gt;=#{dateBegin} and clock_date&lt;=#{dateEnd} order by rid
	</select>

	<select id="getRecordsByDateAndMobile" parameterType="Map" resultMap="AttendanceMap">
		select r.rid,r.user_id,r.user_name,r.clock_date,r.clock_on_datetime,r.clock_on_status,r.clock_on_location,r.clock_on_device,r.clock_on_remark,
		r.clock_off_datetime,r.clock_off_status,r.clock_off_location,r.clock_off_device,r.clock_off_remark,r.patchClock_type,r.patchClock_status,r.revoke_type
		from tbl_attendance_records r left join tbl_users u on r.user_id=u.user_id
		where u.mobile=#{mobile} and clock_date&gt;=#{dateBegin} and clock_date&lt;=#{dateEnd} and u.disabled='0' order by r.rid
	</select>
	
	<update id="updateClockOffInfo" parameterType="Attendance">
		update tbl_attendance_records set clock_off_datetime=#{clockOffDateTime},clock_off_status = #{clockOffStatus},clock_off_location=#{clockOffLocation},
		clock_off_device=#{clockOffDevice},clock_off_remark=#{clockOffRemark} where user_id=#{userId} and clock_date = #{clockDate}
	</update>
	
	<delete id="deleteRecordsByRids" parameterType="java.util.List">
		delete from tbl_attendance_records where rid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
	        #{item}   
	    </foreach>  
	</delete>
	
	<select id="getUsersFromRecords" parameterType="Map" resultType="Map">
	    select r.user_id,r.user_name,d.dept_number,d.name deptName,c.companyNumber,c.name from (
	    	select distinct user_id,user_name,dept_num,company_num from tbl_attendance_records
		 	where company_num=#{company_num}
			<if test="dept_num != null and dept_num != 0">
				and dept_num = #{dept_num}
			</if>
			and clock_date&gt;=#{start_date} and clock_date&lt;=#{end_date}
	    ) r
	    left join tbl_departments d on r.dept_num=d.dept_number left join tbl_company c on d.company_num=c.companyNumber
		<if test="user_name != null and user_name != ''">
			where r.user_name like concat('%',#{user_name},'%')
		</if>
		<if test="limit != null and limit != ''">
			limit #{offset},#{limit}
		</if>
	</select>
	
	<select id="getStatistisCount" parameterType="Map" resultType="Integer">
	    select count(1) from (select distinct user_id,user_name,dept_num,company_num from tbl_attendance_records where company_num=#{company_num}
			<if test="dept_num != null and dept_num != 0">
				and dept_num = #{dept_num}
			</if>
			and clock_date&gt;=#{start_date} and clock_date&lt;=#{end_date}) r
		<if test="user_name != null and user_name != ''">
			where r.user_name like concat('%',#{user_name},'%')
		</if>
	</select>
	
	<select id="getStatistis" parameterType="Map" resultMap="AttendanceMap">
		select * from tbl_attendance_records where company_num=#{company_num}
		<if test="dept_num != null and dept_num != 0">
			and dept_num = #{dept_num}
		</if>
		and clock_date&gt;=#{start_date} and clock_date&lt;=#{end_date} 
		<if test="user_name != null and user_name != ''">
			and user_name like concat('%',#{user_name},'%')
		</if>
	</select>
	
	<select id="getRecordsByDate" parameterType="Map" resultMap="AttendanceMap">
		select * from tbl_attendance_records where clock_date &gt;= #{start_date} and clock_date &lt;=# {end_date} order by rid
	</select>
	
	<update id="patchClock" parameterType="Map">
		update tbl_attendance_records set
		<if test="patchClockType == 0">
			clock_on_datetime = #{patchClockOnTime},clock_on_status = #{patchClockOnStatus},clock_off_datetime = #{patchClockOffTime},clock_off_status = #{patchClockOffStatus},
		</if>
		<if test="patchClockType == 1">
			clock_on_datetime = #{patchClockOnTime},clock_on_status = #{patchClockOnStatus},
		</if>
		<if test="patchClockType == 2">
			clock_off_datetime = #{patchClockOffTime},clock_off_status = #{patchClockOffStatus},
		</if>
		patchClock_type = #{patchClockType},patchClock_status = #{patchClockStatus} where user_id=#{userId} and clock_date = #{clockDate}
	</update>
	
	<update id="updatePatchClockStatus" parameterType="Map">
		update tbl_attendance_records set patchClock_type = #{patchClockType},patchClock_status = #{patchClockStatus} where user_id=#{userId} and clock_date = #{clockDate}
	</update>
	
</mapper>