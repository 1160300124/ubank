<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.ulaiber.web.dao.AttendanceDao">

    <resultMap id="AttendanceMap" type="Attendance" >
    	<id column="rid" property="rid" jdbcType="BIGINT" />
    	<result column="user_id" property="userId" jdbcType="BIGINT" />
    	<result column="user_name" property="userName" jdbcType="VARCHAR" />
    	<result column="clock_date" property="clockDate" jdbcType="VARCHAR" />
    	<result column="clock_time" property="clockTime" jdbcType="VARCHAR" />
    	<result column="clock_type" property="clockType" jdbcType="VARCHAR" />
    	<result column="clock_status" property="clockStatus" jdbcType="VARCHAR" />
    	<result column="clock_location" property="clockLocation" jdbcType="VARCHAR" />
    	<result column="clock_device" property="clockDevice" jdbcType="VARCHAR" />
    	<association column="dept_num" property="dept" javaType="com.ulaiber.web.model.Departments" resultMap="DepartmentMap"/>
    	<association column="company_num" property="company" javaType="com.ulaiber.web.model.Company" resultMap="CompanyMap"/>
   </resultMap>
   
   <resultMap id="DepartmentMap" type="com.ulaiber.web.model.Departments" >
    	<id column="dept_number" property="dept_number" jdbcType="INTEGER" />
    	<result column="deptName" property="deptName" jdbcType="VARCHAR" />
    	<result column="count" property="count" />
    	<result column="remark" property="remark" jdbcType="VARCHAR" />
    	<result column="company_num" property="company_num" />
   </resultMap>
   
   <resultMap id="CompanyMap" type="com.ulaiber.web.model.Company" >
    	<id column="companyNumber" property="companyNumber" jdbcType="INTEGER" />
    	<result column="name" property="name" jdbcType="VARCHAR" />
    	<result column="account" property="account" jdbcType="VARCHAR" />
    	<result column="legalPerson" property="legalPerson" jdbcType="VARCHAR" />
    	<result column="details" property="details" jdbcType="VARCHAR" />
    	<result column="group_num" property="group_num" />
   </resultMap>
  
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<insert id="save" parameterType="Attendance" >
		insert into tbl_attendance_records(user_id, user_name, dept_num, company_num, clock_date, clock_time, clock_type, clock_status, clock_location, clock_device)
		    values(#{userId}, #{userName}, #{dept.dept_number}, #{company.companyNumber}, #{clockDate}, #{clockTime}, #{clockType}, #{clockStatus}, #{clockLocation}, #{clockDevice}) 
	</insert>
	
	<sql id="byCond">
		where r.company_num = #{company_num} and r.clock_date &gt;= #{start_date} and r.clock_date &lt;= #{end_date}
		<if test="dept_num != null and dept_num != 0">
			and r.dept_num = #{dept_num}
		</if>
		<if test="clock_type != null and clock_type != ''">
			and r.clock_type = #{clock_type}
		</if>
		<if test="clock_status != null and clock_status != ''">
			and r.clock_status = #{clock_status}
		</if>
		<if test="user_name != null and user_name != ''">
			and r.user_name like concat('%',#{user_name},'%')
		</if>
	</sql>
	
	<select id="getRecordsByCond" parameterType="Map" resultMap="AttendanceMap">
		select r.*,d.dept_number,d.name deptName,c.companyNumber,c.name from tbl_attendance_records r left join tbl_departments d on r.dept_num=d.dept_number 
			left join tbl_company c on d.company_num=c.companyNumber
			<include refid="byCond" />
		order by rid limit #{offset},#{limit}
	</select>

	<select id="getCountBycond" parameterType="Map" resultType="Integer">
		select count(1) from tbl_attendance_records r left join tbl_departments d on r.dept_num=d.dept_number left join tbl_company c on d.company_num=c.companyNumber
		<include refid="byCond" />
	</select>
	
	<select id="getRecordsByDateAndUserId" parameterType="Map" resultMap="AttendanceMap">
		select * from tbl_attendance_records where clock_date=#{clockDate} and user_id=#{userId}
		<if test="clockType != null and clockType != ''">
			and r.clock_type = #{clockType}
		</if>
		<choose>
			<when test="yesterday != null and yesterday != ''">
				and clock_time &lt;= #{clockOffEndTime} or clock_date = #{yesterday} and clock_time &gt;= #{clockOnStartTime} and user_id=#{userId}
			</when>
			<otherwise>
				and clock_time &gt;= #{clockOnStartTime}
			</otherwise>
		</choose>
		order by rid
	</select>

	<select id="getRecordsByDateAndMobile" parameterType="Map" resultMap="AttendanceMap">
		select r.* from tbl_attendance_records r left join tbl_users u on r.user_id=u.user_id where r.clock_date=#{clockDate} and u.mobile=#{mobile}
		<choose>
			<when test="yesterday != null and yesterday != ''">
				and r.clock_time &lt;= #{clockOffEndTime} or r.clock_date = #{yesterday} and r.clock_time &gt;= #{clockOnStartTime} and u.mobile=#{mobile}
			</when>
			<otherwise>
				and r.clock_time &gt;= #{clockOnStartTime}
			</otherwise>
		</choose>
		order by rid
	</select>
	
	<select id="getLatestRecordByUserId" parameterType="Long" resultMap="AttendanceMap">
		select user_id,user_name,clock_date,clock_time,clock_type,clock_status,clock_location,clock_device from tbl_attendance_records where user_id=#{userId} order by clock_date desc limit 1
	</select>
	
	<update id="updateClockOffInfo" parameterType="Attendance">
		update tbl_attendance_records set clock_time=#{clockTime},clock_status = #{clockStatus},clock_location=#{clockLocation},clock_device=#{clockDevice}
		<if test="yesterday != null and yesterday != ''">
			,clock_date = #{clockDate}
		</if>
		where user_id=#{userId} and clock_type = #{clockType}
		<choose>
			<when test="yesterday != null and yesterday != ''">
				and clock_date = #{yesterday}
			</when>
			<otherwise>
				and clock_date = #{clockDate}
			</otherwise>
		</choose>
	</update>
	
	<delete id="deleteRecordsByRids" parameterType="java.util.List">
		delete from tbl_attendance_records where rid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
	        #{item}   
	    </foreach>  
	</delete>

</mapper>