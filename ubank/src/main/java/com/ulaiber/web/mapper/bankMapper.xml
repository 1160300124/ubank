<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.ulaiber.web.dao.BankDao">

    <resultMap id="BankMap" type="Bank" >
    	<id column="bankNo" property="bankNo" jdbcType="VARCHAR" />
    	<result column="bankName" property="bankName" jdbcType="VARCHAR" />
   </resultMap>
  
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<select id="getBankByBankNo" parameterType="String" resultMap="BankMap">
		select * from tbl_banks where bankNo=#{bankNo}
	</select>
	
	<select id="getAllBanks" resultMap="BankMap">
		select * from tbl_banks
	</select>

	<!--根据公司编号删除银行账户信息表中的数据-->
	<delete id="deleteComByNum" parameterType="String">
		DELETE FROM tbl_bankAccount where companyNumber = #{comNum}
	</delete>

	<!--根据公司编号删除银行账户信息表中的数据-->
	<delete id="deleteCompanyByNum" parameterType="String">
		DELETE FROM tbl_bankAccount where companyNumber in
		<foreach collection="array" item="idsArr" open="(" separator="," close=")">
			#{idsArr}
		</foreach>
	</delete>

	<!--获取公司绑定的银行信息-->
	<select id="getBankByCode" parameterType="String" resultType="com.ulaiber.web.model.BankAccount" >
		select b.bankNumber from tbl_company a left join tbl_bankAccount b on a.companyNumber = b.companyNumber
			where a.code = #{code}
	</select>

	<!--根据银行编号获取银行信息-->
	<select id="queryBanksByNumber" parameterType="String" resultType="com.ulaiber.web.model.Bank">
		select a.bankNo,a.type,b.name as bankName from tbl_banks a inner join tbl_bindBank b on a.bankNo = b.bankNo
			where a.bankNo = #{bankNumber}
	</select>

	<!--删除原绑定银行卡-->
	<update id="deleteOriginCart" parameterType="Map">
		UPDATE tbl_userToBank SET disabled = 1 where userid = #{userid} and bankCardNo = #{originCart}
	</update>
</mapper>