<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.ulaiber.web.dao.SalaryDetailDao">

    <resultMap id="SalaryDetailMap" type="SalaryDetail" >
    	<id column="did" property="did" jdbcType="VARCHAR" />
    	<result column="sid" property="sid" jdbcType="VARCHAR" />
    	<result column="userId" property="userId" jdbcType="VARCHAR" />
    	<result column="userName" property="userName" jdbcType="VARCHAR" />
    	<result column="cardNo" property="cardNo" jdbcType="VARCHAR" />
    	<result column="subAcctNo" property="subAcctNo" jdbcType="VARCHAR" />
    	<result column="pre_tax_salaries" property="preTaxSalaries" jdbcType="DOUBLE" />
    	<result column="bonuses" property="bonuses" jdbcType="DOUBLE" />
    	<result column="subsidies" property="subsidies" jdbcType="DOUBLE" />
    	<result column="attendance_cut_payment" property="totalCutPayment" jdbcType="DOUBLE" />
    	<result column="later_cut_payment" property="laterCutPayment" jdbcType="DOUBLE" />
    	<result column="leave_early_cut_payment" property="leaveEarlyCutPayment" jdbcType="DOUBLE" />
    	<result column="forget_clock_cut_payment" property="forgetClockCutPayment" jdbcType="DOUBLE" />
    	<result column="no_clock_cut_payment" property="noClockCutPayment" jdbcType="DOUBLE" />
    	<result column="askForLeave_cut_payment" property="askForLeaveCutPayment" jdbcType="DOUBLE" />
    	<result column="overtime_payment" property="overtimePayment" jdbcType="DOUBLE" />
    	<result column="socialInsurance" property="socialInsurance" jdbcType="DOUBLE" />
    	<result column="publicAccumulationFunds" property="publicAccumulationFunds" jdbcType="DOUBLE" />
    	<result column="taxThreshold" property="taxThreshold" jdbcType="DOUBLE" />
    	<result column="personalIncomeTax" property="personalIncomeTax" jdbcType="DOUBLE" />
    	<result column="else_cut_payment" property="elseCutPayment" jdbcType="DOUBLE" />
    	<result column="salaries" property="salaries" jdbcType="DOUBLE" />
    	<result column="createDate" property="createDate" jdbcType="VARCHAR" />
    	<result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
    	<result column="remark" property="remark" jdbcType="VARCHAR" />
   </resultMap>
   
 	<!-- 批量插入-->
   <insert id ="batchSave" parameterType="java.util.List" useGeneratedKeys="true">
        insert into tbl_salaries_detail(did, sid, userId, userName, cardNo, subAcctNo, pre_tax_salaries, bonuses, subsidies, attendance_cut_payment, 
        later_cut_payment, leave_early_cut_payment,forget_clock_cut_payment, no_clock_cut_payment, askForLeave_cut_payment,
        overtime_payment, socialInsurance, publicAccumulationFunds, taxThreshold, personalIncomeTax, else_cut_payment, salaries, createDate, updateTime, remark, trading) values
        <foreach collection ="list" item="detail" index= "index" separator =",">
            (#{detail.did}, #{detail.sid}, #{detail.userId}, #{detail.userName}, #{detail.cardNo}, #{detail.subAcctNo}, #{detail.preTaxSalaries}, #{detail.bonuses}, #{detail.subsidies},
            #{detail.totalCutPayment}, #{detail.laterCutPayment}, #{detail.leaveEarlyCutPayment}, #{detail.forgetClockCutPayment}, #{detail.noClockCutPayment}, 
            #{detail.askForLeaveCutPayment}, #{detail.overtimePayment}, #{detail.socialInsurance}, #{detail.publicAccumulationFunds}, #{detail.taxThreshold},
            #{detail.personalIncomeTax}, #{detail.elseCutPayment}, #{detail.salaries}, #{detail.createDate}, #{detail.updateTime}, #{detail.remark}, 1)
        </foreach >
   </insert >
    
   <update id="batchUpdate"  parameterType="java.util.List">  
        <foreach collection="list" item="detail" index="index" open="" close="" separator=";">  
            update tbl_salaries_detail   
            <set>  
            	pre_tax_salaries=#{detail.preTaxSalaries}, bonuses=#{detail.bonuses}, subsidies=#{detail.subsidies}, attendance_cut_payment=#{detail.totalCutPayment},
            	later_cut_payment=#{detail.laterCutPayment}, leave_early_cut_payment=#{detail.leaveEarlyCutPayment}, forget_clock_cut_payment=#{detail.forgetClockCutPayment},
            	no_clock_cut_payment=#{detail.noClockCutPayment}, askForLeave_cut_payment=#{detail.askForLeaveCutPayment}, overtime_payment=#{detail.overtimePayment},
            	socialInsurance=#{detail.socialInsurance}, publicAccumulationFunds=#{detail.publicAccumulationFunds}, taxThreshold=#{detail.taxThreshold},
            	personalIncomeTax= #{detail.personalIncomeTax}, else_cut_payment=#{detail.elseCutPayment}, salaries=#{detail.salaries}, remark=#{detail.remark}
            </set>  
            where did=${detail.did}  
       </foreach>  
   </update>
   
   <update id="batchUpdateStatusBySid" parameterType="java.util.List">
   		<foreach collection="list" item="detail" index="index" open="" close="" separator=";">  
            update tbl_salaries_detail   
            <set>  
            	status=#{detail.status}, remark=#{detail.remark}
            </set>  
            where subAcctNo=#{detail.subAcctNo} and sid=#{detail.sid}
       </foreach>
   </update>
  
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<select id="getDetailsBySid2" parameterType="Map" resultMap="SalaryDetailMap">
		select * from tbl_salaries_detail where sid=#{sid}
		<if test="search != null and search != ''">
			and userName like concat('%',#{search},'%')
		</if>
		order by did asc
		<if test="limit != null and limit != ''">
			limit #{offset},#{limit}
		</if>
	</select>
	
	<select id="getDetailsBySid" parameterType="String" resultMap="SalaryDetailMap">
		select * from tbl_salaries_detail where sid=#{sid}
	</select>

	<select id="getSalaryDetailByUserIdAndMonth" resultMap="SalaryDetailMap">
		select d.userId, d.userName, d.cardNo, d.pre_tax_salaries, d.bonuses, d.subsidies, d.attendance_cut_payment, 
        d.later_cut_payment, d.leave_early_cut_payment, d.forget_clock_cut_payment, d.no_clock_cut_payment, d.askForLeave_cut_payment,
        d.overtime_payment, d.socialInsurance, d.publicAccumulationFunds, d.taxThreshold, d.personalIncomeTax, d.else_cut_payment, d.salaries, s.salary_month salaryMonth
		from tbl_salaries s,tbl_salaries_detail d where s.sid = d.sid and d.userId=#{userId} 
		<if test="salaryMonth != null and salaryMonth != ''">
			and s.salary_month=#{salaryMonth}
		</if>
		order by s.salary_month desc limit 1
	</select>
	
	<select id="getTotalBySid" resultType="Integer">
		select count(1) from tbl_salaries_detail where sid=#{sid}
	</select>
	
	<select id="getLatestSalaryDetail" parameterType="String" resultMap="SalaryDetailMap">
		select * from tbl_salaries_detail where sid = (select sid from tbl_salaries where company_id=#{companyId} order by salary_month desc limit 1)
	</select>
	
	<delete id="batchDeleteSalaryDetails" parameterType="java.util.List">  
		delete from tbl_salaries_detail where sid in
	    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
	        #{item}   
	    </foreach>  
	</delete>
	
</mapper>