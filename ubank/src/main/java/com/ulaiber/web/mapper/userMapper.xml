<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.ulaiber.web.dao.UserDao">

	<resultMap id="BankMap" type="Bank" >
    	<id column="bankNo" property="bankNo" jdbcType="VARCHAR" />
    	<result column="bankName" property="bankName" jdbcType="VARCHAR" />
	</resultMap>
    <resultMap id="UserMap" type="User" >
    	<id property="id" column="user_id" jdbcType="BIGINT" />
    	<result property="userName" column="user_name" jdbcType="VARCHAR" />
    	<result property="login_password" column="login_password" jdbcType="VARCHAR" />
    	<result property="pay_password" column="pay_password" jdbcType="VARCHAR" />
    	<result property="login_ticket" column="login_ticket" jdbcType="VARCHAR" />
    	<result property="access_token" column="access_token" jdbcType="VARCHAR" />
    	<result property="mobile" column="mobile" jdbcType="VARCHAR" />
    	<result property="reserve_mobile" column="reserve_mobile" jdbcType="VARCHAR" />
    	<result property="cardType" column="cardType" jdbcType="VARCHAR" />
    	<result property="cardNo" column="cardNo" jdbcType="VARCHAR" />
    	<result property="email" column="email" jdbcType="VARCHAR" />
    	<result property="status" column="status" jdbcType="INTEGER" />
    	<result property="role_id" column="role_id" jdbcType="INTEGER" />
    	<result property="createTime" column="createTime" jdbcType="VARCHAR" />
    	<result property="expiredTime" column="expiredTime" jdbcType="VARCHAR" />
    	<result property="loginTime" column="loginTime" jdbcType="VARCHAR" />
    	<result property="groupNumber" column="groupNumber" jdbcType="VARCHAR" />
    	<result property="companyNumber" column="companyNumber" jdbcType="VARCHAR" />
    	<result property="dept_number" column="dept_number" jdbcType="VARCHAR" />
    	<result property="com_name" column="com_name" jdbcType="VARCHAR" />
    	<result property="remark" column="remark" jdbcType="VARCHAR" />
    	<result property="login_fail_num" column="login_fail_num" jdbcType="INTEGER" />
    	<result property="login_fail_time" column="login_fail_time" jdbcType="VARCHAR" />
    	<result property="sysflag" column="sysflag" jdbcType="VARCHAR" />
    	<association property="bank" column="bankNo" javaType="Bank" select="com.ulaiber.web.dao.BankDao.getBankByBankNo" />
   </resultMap>
  
	<insert id="save" parameterType="User"  useGeneratedKeys="true" keyProperty="id">
		insert into tbl_users(user_name, login_password, pay_password, mobile, reserve_mobile, cardType,
		 		cardNo, bankNo, bankCardNo, role_id, createTime,entryDate,disabled)
		       values(#{userName}, #{login_password}, #{pay_password}, #{mobile}, #{reserve_mobile},
		        	#{cardType}, #{cardNo}, #{bank.bankNo}, #{bankCardNo}, #{role_id}, #{createTime},#{createTime},'0')
	</insert>
	
	<update id="update" parameterType="User">
		update tbl_users set login_ticket=#{login_ticket}, access_token=#{access_token}, loginTime=#{loginTime} where mobile=#{mobile}
	</update>
	
	<update id="updateLoginPwd" parameterType="User">
		update tbl_users set login_password=#{login_password} where mobile=#{mobile}
	</update>
	
	<update id="updatePayPwd" parameterType="User">
		update tbl_users set pay_password=#{pay_password} where mobile=#{mobile}
	</update>
	
	<update id="updateForBankCard" parameterType="User">
		update tbl_users set bankno=#{bank.bankno}, bankcardno=#{bankcardno}, reserve_mobile=#{reserve_mobile} where mobile=#{mobile}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from tbl_users where mobile=#{mobile}
	</delete>
	
	<select id="getUserByTicketAndToken" parameterType="User" resultMap="UserMap">
		select user_id,user_name,mobile from tbl_users where disabled = '0' and login_ticket=#{login_ticket} and access_token=#{access_token}
	</select>

	<!--更新用户信息-->
	<update id="updateUserInfo" parameterType="com.ulaiber.web.model.User" >
		UPDATE tbl_users SET cardNo = #{cardNo},reserve_mobile = #{reserve_mobile},user_name =#{userName} where user_id = #{id}
	</update>
	
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<select id="getUserByMobile" parameterType="String" resultMap="UserMap">
		select u.*,r.groupNumber,r.companyNumber as companyId,r.dept_number,l.companyNumber,
		  r.sysflag,d.name dept_name,c.name as com_name from tbl_users u
		left join tbl_roots r on u.user_id = r.userid
		left join tbl_roles l on u.role_id = l.role_id
		left join tbl_departments d on r.dept_number = d.dept_number
		left join tbl_company c on r.companyNumber = c.companyNumber
		where u.disabled = '0' and r.disabled ='0' and u.mobile=#{mobile}
	</select>
	
	<select id="findAll" resultMap="UserMap">
		select * from tbl_users where disabled = '0'
	</select>
	
	<select id="getUserByName" resultMap="UserMap">
		select a.*,b.groupNumber,b.dept_number,c.companyNumber,b.sysflag,e.name as com_name from tbl_users a
		LEFT join tbl_roots b on a.user_id = b.userid
		left join tbl_roles c on a.role_id = c.role_id
		left join tbl_company e on b.companyNumber = e.companyNumber
		where disabled = '0' and b.disabled ='0' and a.user_name = #{userName}
	</select>
	
	<select id="getUserById" resultMap="UserMap">
		select u.*,r.groupNumber,r.companyNumber companyId,r.dept_number,
		l.companyNumber,r.sysflag,d.name dept_name,c.name as com_name from tbl_users u
		left join tbl_roots r on u.user_id = r.userid
		left join tbl_roles l on u.role_id = l.role_id
		left join tbl_departments d on r.dept_number = d.dept_number
		left join tbl_company c on r.companyNumber = c.companyNumber
		where u.disabled = '0' and r.disabled ='0' and  u.user_id = #{userId}
	</select>

	<!--获取集团系统所有菜单-->
	 <select id="getAllMenuByUser" resultType="com.ulaiber.web.model.Menu" parameterType="Map">
		 select a.id,a.name,a.url,a.code,a.father,a.icon,a.sorting from tbl_menu a
		where type = 0
		 <!--如果当前角色为运维人员，则显示所有菜单-->
		<if test="sysflag != 0">
			and a.code in( select b.menuNumber from tbl_users a  left join tbl_roleMenu b on a.role_id = b.role_id
			where a.disabled = '0' and a.user_name = #{userName})
		</if>

	 </select>

	<!--获取集团系统所有菜单-->
	<select id="getAllMenu" resultType="com.ulaiber.web.model.Menu" parameterType="Map">
		select distinct a.id,a.name,a.url,a.code,a.father,a.icon,a.sorting from tbl_menu a
			left join tbl_roleMenu b on a.code = b.menuNumber where  type = 0
		<if test='sysflag == "1"'>
			and b.role_id = #{roleid}
		</if>
	</select>
	
	<select id="getUsersByComNum" parameterType="Map" resultMap="UserMap">
		select u.user_id,u.user_name,u.cardNo,u.salaries,r.groupNumber,r.dept_number,r.companyNumber,r.sysflag from tbl_users u
		LEFT join tbl_roots r on u.user_id = r.userid
		left join tbl_roles l on u.role_id = l.role_id
		where u.disabled = '0' and r.disabled ='0' and  r.companyNumber = #{comNum}
		<if test="search != null and search != ''">
			and u.user_name like concat('%',#{search},'%')
		</if>
	</select>

	<!--新增二类账户信息-->
	<insert id="insertSecondAccount" parameterType="com.ulaiber.web.model.ShangHaiAcount.SecondAcount" >
		INSERT INTO tbl_secondAccount (userid,EacctNo,CustName,SubAcctNo,CoopCustNo,ProductCd,Sign,FundCode
				,AcctOpenResult,AcctOpenDesc,FundAcctOpenResult,FundAcctOpenDesc,FundAcct,FundTxnAcct,disabled,createDate,freeze)
			VALUES (#{userid},#{EacctNo},#{CustName},#{SubAcctNo},#{CoopCustNo},#{ProductCd},#{Sign},#{FundCode},
			#{AcctOpenResult},#{AcctOpenDesc},#{FundAcctOpenResult},#{FundAcctOpenDesc},#{FundAcct},#{FundTxnAcct},0,#{createDate},'0')
	</insert>

	<!--根据公司编号查询绑定的银行-->
	<select id="queryBankByCompay" parameterType="int" resultType="com.ulaiber.web.model.Bank">
		select DISTINCT a.* from tbl_banks a
			left join tbl_bankAccount b on a.bankNo = b.bankNumber
			left join tbl_company c on b.companyNumber = b.companyNumber
			where c.companyNumber = #{companyNumber}
	</select>

	<!--获取二类帐户信息-->
	<select id="getSecondAccountByUserId" parameterType="int" resultType="com.ulaiber.web.model.SecondAccountAO">
		SELECT a.*,b.bankNo,b.bankCardNo,d.name as bankName,d.type  FROM tbl_secondAccount a
		left join tbl_userToBank b on a.userid = b.userid
		left join tbl_bindBank d on b.bankNo = d.bankNo
			where b.disabled = 0 and a.userid = #{userid}
	</select>

	<!--新增用户绑定银行卡信息-->
	<insert id="insertUserToBank" parameterType="Map" >
		INSERT INTO tbl_userToBank (userid,bankNo,bankCardNo,disabled,type)
			VALUES (#{userid},#{bankNo},#{bankCardNo},0,#{type})
	</insert>

	<!--查询用户是否已注册二类账户-->
	<select id="findSecondAcc" parameterType="int" resultType="com.ulaiber.web.model.ShangHaiAcount.SecondAcount">
		SELECT userid FROM tbl_secondAccount where userid = #{id}
	</select>

	<!-- 根据电话获取二类帐户信息-->
	<select id="getSecondAccountByMobile" parameterType="int" resultType="com.ulaiber.web.model.SecondAccountAO">
		SELECT a.*,b.bankNo,b.bankCardNo,d.name as bankName,d.type FROM tbl_secondAccount a
			left join tbl_userToBank b on a.userid = b.userid
			left join tbl_users c on a.userid = c.user_id
			left join tbl_bindBank d on b.bankNo = d.bankNo
			where b.disabled = 0 and c.mobile = #{mobile}
	</select>


	<!--根据用户ID修改银行卡预留电话-->
	<update id="modifyReserveMobile" parameterType="Map">
		update tbl_users set reserve_mobile = #{newReserveMobile} where user_id = #{userid}
	</update>

	<!--修改密码-->
	<update id="modifyPwd" parameterType="Map">
		UPDATE tbl_users SET  login_password = #{password} where mobile = #{mobile}
	</update>

	<!--上传头像-->
	<update id="uploadIcon" parameterType="Map" >
		UPDATE tbl_users SET image = #{image} where user_id = #{userId}
	</update>
</mapper>